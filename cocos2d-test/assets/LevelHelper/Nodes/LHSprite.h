//  This file was generated by LevelHelper
//  http://www.levelhelper.org
//
//  LevelHelperLoader.h
//  Created by Bogdan Vladu
//  Copyright 2011 Bogdan Vladu. All rights reserved.
//
////////////////////////////////////////////////////////////////////////////////
//
//  This software is provided 'as-is', without any express or implied
//  warranty.  In no event will the authors be held liable for any damages
//  arising from the use of this software.
//  Permission is granted to anyone to use this software for any purpose,
//  including commercial applications, and to alter it and redistribute it
//  freely, subject to the following restrictions:
//  The origin of this software must not be misrepresented; you must not
//  claim that you wrote the original software. If you use this software
//  in a product, an acknowledgment in the product documentation would be
//  appreciated but is not required.
//  Altered source versions must be plainly marked as such, and must not be
//  misrepresented as being the original software.
//  This notice may not be removed or altered from any source distribution.
//  By "software" the author refers to this code file and not the application 
//  that was used to generate this file.
//
////////////////////////////////////////////////////////////////////////////////

#import <Foundation/Foundation.h>
#import "cocos2d.h"
#include "Box2D.h"

@class LHPathNode;
@class LHAnimationNode;
@class LevelHelperLoader;
@class LHParallaxNode;
@interface LHSprite : CCSprite
{
	b2Body* body; //week ptr
    NSMutableString* uniqueName;
    NSMutableDictionary* customUserValues;
    
    int currentFrame;
    LHAnimationNode* animation;
    LHPathNode* pathNode;
    
    LevelHelperLoader* parentLoader;
    
    CGSize realScale; //used for the joints in case you create a level with SD graphics using ipad template
    
    LHParallaxNode* parallaxFollowingThisSprite;
    LHParallaxNode* spriteIsInParallax;
}
@property (readwrite) CGSize realScale;

+(id) spriteWithTexture:(CCTexture2D*)texture;
+(id) spriteWithTexture:(CCTexture2D*)texture rect:(CGRect)rect;
+(id) spriteWithSpriteFrame:(CCSpriteFrame*)spriteFrame;
+(id) spriteWithSpriteFrameName:(NSString*)spriteFrameName;
+(id) spriteWithFile:(NSString*)filename;
+(id) spriteWithFile:(NSString*)filename rect:(CGRect)rect;
+(id) spriteWithCGImage: (CGImageRef)image key:(NSString*)key;
+(id) spriteWithBatchNode:(CCSpriteBatchNode*)batchNode rect:(CGRect)rect;

-(id) initWithTexture:(CCTexture2D*)texture;
-(id) initWithTexture:(CCTexture2D*)texture rect:(CGRect)rect;
-(id) initWithSpriteFrame:(CCSpriteFrame*)spriteFrame;
-(id) initWithSpriteFrameName:(NSString*)spriteFrameName;
-(id) initWithFile:(NSString*)filename;
-(id) initWithFile:(NSString*)filename rect:(CGRect)rect;
-(id) initWithCGImage:(CGImageRef)image key:(NSString*)key;
-(id) initWithBatchNode:(CCSpriteBatchNode*)batchNode rect:(CGRect)rect;
-(id) initWithBatchNode:(CCSpriteBatchNode*)batchNode rectInPixels:(CGRect)rect;

////////////////////////////////////////////////////////////////////////////////

//INFO METHODS
//------------------------------------------------------------------------------
-(void) setUniqueName:(NSString*)name;
-(NSString*)uniqueName;

-(void) setBody:(b2Body*)body;
-(b2Body*)body;
-(bool) removeBodyFromWorld;

-(void) setCustomValue:(id)value withKey:(NSString*)key;
-(id) customValueWithKey:(NSString*)key;


//TRANSFORMATION METHODS
//------------------------------------------------------------------------------
//The following method will transform the physic body also - if any
-(void) transformPosition:(CGPoint)pos;
-(CGPoint)position;

-(void)transformRotation:(float)rot;
-(float)rotation;


//ANIMATION METHODS
//------------------------------------------------------------------------------
-(void) startAnimationNamed:(NSString*)animName 
             endObserverObj:(id)obj  
             endObserverSel:(SEL)sel 
  shouldObserverLoopForever:(bool)observeLooping;

-(void) startAnimationNamed:(NSString*)animName 
          startingFromFrame:(int)startFrame //frameNo should be from 0 to numberOfFrames
             endObserverObj:(id)obj  
             endObserverSel:(SEL)sel
  shouldObserverLoopForever:(bool)observeLooping;

-(void) startAnimationNamed:(NSString*)animName 
          startingFromFrame:(int)startFrame; //frameNo should be from 0 to numberOfFrames

-(void) startAnimationNamed:(NSString*)animName;

//does not start the animation - just changed the texture. 
//use this when you want to use nextFrame / prevFrame methods
-(void) prepareAnimationNamed:(NSString*)animName; 

-(void) stopAnimation;

-(void) setAnimation:(LHAnimationNode*)anim; //use wisely e.g. don't use it
-(LHAnimationNode*)animation;
-(NSString*) animationName;

-(int) numberOfFrames;
-(void) setFrame:(int)frmNo;
-(int) currentFrame;

-(void) nextFrame;
-(void) prevFrame;

-(void) nextFrameAndRepeat; //will loop when it reaches end
-(void) prevFrameAndRepeat; //will loop when it reaches start

-(bool) isAtLastFrame;


//PATH METHODS
//------------------------------------------------------------------------------
-(void) moveOnPathWithUniqueName:(NSString*)pathName 
                           speed:(float)pathSpeed 
                 startAtEndPoint:(bool)startAtEndPoint
                        isCyclic:(bool)isCyclic
               restartAtOtherEnd:(bool)restartOtherEnd
                 axisOrientation:(int)axis
                           flipX:(bool)flipx
                           flipY:(bool)flipy
                   deltaMovement:(bool)dMove//describe path movement without setting the sprite position on the actual points on the path
                  endObserverObj:(id)obj  //pass nil if you dont want an observer
                  endObserverSel:(SEL)sel;//pass nil 

-(void) cancelPathMovement;
-(void) pausePathMovement:(bool)pauseStatus;

-(void) setPathSpeed:(float)value;
-(float)pathSpeed;

-(LHPathNode*)pathNode;
//------------------------------------------------------------------------------

//CLASS METHODS
//------------------------------------------------------------------------------
+(NSString*) uniqueNameForBody:(b2Body*)body;
+(LHSprite*) spriteForBody:(b2Body*)body;
+(int) tagForBody:(b2Body*)body;
+(bool) isLHSprite:(id)object;
@end	
